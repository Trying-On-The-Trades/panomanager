<?xml version="1.0" encoding="UTF-8"?><!-- dynamically generated xml file (by the editor plugin) --><krpano version="1.17.3" onstart="initiate_menu();" bgcolor="#ffffff" logkey="false" showerrors="false">		<progress showload="none" showwait="none" />	<view hlookat="10.057158" vlookat="-2.445174" fovmin="13.10612" fovmax="90.0" maxpixelzoom="1.0" 	      limitfov="false" 	      limitview="lookat" hlookatmin="-180.0" hlookatmax="180.0" vlookatmin="20" vlookatmax="-10.0" 	      />         <!--<plugin name="editor" url="plugins/editor.swf" keep="true" align="bottom" x="0" y="16" />-->	<include url="sidemenu.xml" />	<include url="skin/vtourskin.xml" />	<preview url="panodata/%FIRSTXML%/hairstyling4_21/preview.jpg" striporder="FRBLUD" />	<plugin name="gyro" devices="html5"        url="gyro.js"         keep="true"        enabled="true"        camroll="true"        friction="0.5"        velastic="0.2"        vrelative="false"        onavailable=""        />			<image type="CUBE" multires="true" progressive="true" tilesize="512" baseindex="0" multiresthreshold="0.025">		<level tiledimagewidth="993" tiledimageheight="993">			<left  url="hairstyling4_21/3/0/%v_%u.jpg" />			<front url="hairstyling4_21/0/0/%v_%u.jpg" />			<right url="hairstyling4_21/1/0/%v_%u.jpg" />			<back  url="hairstyling4_21/2/0/%v_%u.jpg" />			<up    url="hairstyling4_21/4/0/%v_%u.jpg" />			<down  url="hairstyling4_21/5/0/%v_%u.jpg" />		</level>		<level tiledimagewidth="1987" tiledimageheight="1987">			<left  url="hairstyling4_21/3/1/%v_%u.jpg" />			<front url="hairstyling4_21/0/1/%v_%u.jpg" />			<right url="hairstyling4_21/1/1/%v_%u.jpg" />			<back  url="hairstyling4_21/2/1/%v_%u.jpg" />			<up    url="hairstyling4_21/4/1/%v_%u.jpg" />			<down  url="hairstyling4_21/5/1/%v_%u.jpg" />		</level>		<level tiledimagewidth="3974" tiledimageheight="3974">			<left  url="hairstyling4_21/3/2/%v_%u.jpg" />			<front url="hairstyling4_21/0/2/%v_%u.jpg" />			<right url="hairstyling4_21/1/2/%v_%u.jpg" />			<back  url="hairstyling4_21/2/2/%v_%u.jpg" />			<up    url="hairstyling4_21/4/2/%v_%u.jpg" />			<down  url="hairstyling4_21/5/2/%v_%u.jpg" />		</level>		<level tiledimagewidth="7949" tiledimageheight="7949">			<left  url="hairstyling4_21/3/3/%v_%u.jpg" />			<front url="hairstyling4_21/0/3/%v_%u.jpg" />			<right url="hairstyling4_21/1/3/%v_%u.jpg" />			<back  url="hairstyling4_21/2/3/%v_%u.jpg" />			<up    url="hairstyling4_21/4/3/%v_%u.jpg" />			<down  url="hairstyling4_21/5/3/%v_%u.jpg" />		</level>	</image>	<autorotate waittime="1" speed="5" tofov="90" />	<control keycodesin="" keycodesout="" />	<!--	==========================================	This event is important for logging!!!!	==========================================	-->		<events onclick="screentosphere(mouse.x, mouse.y, m_ath, m_atv); showlog(); trace('clicked at ath=',m_ath,' atv=',m_atv);"	        />	<events name="controlmodenewpanoevent" keep="true"	        onnewpano="controlmodenewpanoaction();"	        />	<events name="startbehavioursevents" keep="true"	        onxmlcomplete="startbehavioursxmlcompleteaction"	        />	<events name="autorotation_events" keep="true"	        onnewpano="resumeautorotation(forceresume);"	        />	<events name="showhidetooltipevents" keep="true"	        onremovepano="hideTooltip();"	        />	<events name="zoomevents" keep="true"	        onkeydown="onKDZ"	        onkeyup="onKUZ"	        />	<action name="controlmodenewpanoaction">		if (isdesktop, setControlMode(get(tour_controlmodemousetype)););	</action>	<action name="setcontrolmodedragto">		setControlMode(drag2d);	</action>	<action name="setcontrolmodemoveto">		setControlMode(moveto);	</action>	<action name="setcontrolmode">		set(control.mousetype, %1);		set(tour_controlmodemousetype, %1);		events.dispatch(oncontrolmodechanged);	</action>	<action name="getmessage">		txtadd(real_message_id, get(tour_language), "_", %2);		set(%1, get(data[get(real_message_id)].content));	</action>	<action name="hidehotspots">		set(tour_displayspots, false);		set(nb_spots, get(hotspot.count));		if (nb_spots != 0, hidepanospotsaction(); );		events.dispatch(hotspots_visibility_changed);	</action>	<action name="showhotspots">		set(tour_displayspots, true);		set(nb_spots, get(hotspot.count));		if (nb_spots != 0, showpanospotsaction(); );		events.dispatch(hotspots_visibility_changed);	</action>	<action name="hideshowhotspotsonnewpanoaction">		set(nb_spots, get(hotspot.count));		if (nb_spots != 0,		  if (tour_displayspots, showpanospotsaction(); , hidepanospotsaction(); );		);	</action>	<action name="startbehavioursxmlcompleteaction">		events.dispatch(onPanoStart);		ifnot (tour_firststartactiondone,		  events.dispatch(onTourStart);		  set(tour_firststartactiondone, true);		);	</action>	<action name="mainloadscene">		interruptAnimation();		if (xml.scene != %1, loadscene(%1, NULL, MERGE, BLEND(1)); );	</action>	<action name="loadpreviousscene">		if (%1 != findscene, sub(i, scene.count, 1));		copy(scenenamei, scene[get(i)].name);		dec(i);		if (scenenamei == xml.scene,		  if (i GE 0,		    mainloadscene(get(scene[get(i)].name));		   ,		    sub(lasti, scene.count, 1);		    mainloadscene(get(scene[get(lasti)].name));		  );		 ,		  if(i GE 0, loadPreviousScene(findscene));		);	</action>	<action name="loadnextscene">		if (%1 != findscene, set(i,0));		copy(scenenamei, scene[get(i)].name);		inc(i);		if (scenenamei == xml.scene,		  if (i LT scene.count,		    mainloadscene(get(scene[get(i)].name));		   ,		    mainloadscene(get(scene[0].name)); );		 ,		  if(i LT scene.count, loadNextScene(findscene));		);	</action>	<action name="startautorotation">		set(tour_autorotateenabled, true );		set(autorotate.enabled, true);		set(tour_autorotation_pausecounter, 0);		events.dispatch(onstartautorotation);	</action>	<action name="stopautorotation">		set(tour_autorotateenabled, false);		set(autorotate.enabled, false);		events.dispatch(onstopautorotation);	</action>	<action name="pauseautorotation">		if(tour_autorotateenabled,		  set(autorotate.enabled, false);		  inc(tour_autorotation_pausecounter);		  events.dispatch(onpauseautorotation);		);	</action>	<action name="resumeautorotation">		if(tour_autorotateenabled,		  if (tour_autorotation_pausecounter GT 0,		    if(%1 == forceresume,		      set(tour_autorotation_pausecounter, 0);		     ,		      dec(tour_autorotation_pausecounter);		    );		    if(tour_autorotation_pausecounter == 0,		      set(autorotate.enabled, true);		      events.dispatch(onresumeautorotation);		    );		  );		);	</action>	<action name="startautotour">		set(tour_autotourenabled, true);startautorotation();		events.dispatch(onstartautotour);	</action>	<action name="stopautotour">		set(tour_autotourenabled, false);stopautorotation();		events.dispatch(onstopautotour);	</action>			<!--<action name="computedeeplinkingurl">		txtadd(tour_deeplinkingvars, "s=", get(xml.scene));		Math.round(viewhlookat, view.hlookat);		mod(viewhlookat, 360);		if (viewhlookat GT 180,		  sub(viewhlookat, 360);		 ,		  if (viewhlookat LT -180, add(viewhlookat, 360));		);		Math.round(viewvlookat, view.vlookat);		Math.round(viewfov    , view.fov);		txtadd(tour_deeplinkingvars, get(tour_deeplinkingvars), "&h=", get(viewhlookat));		txtadd(tour_deeplinkingvars, get(tour_deeplinkingvars), "&v=", get(viewvlookat));		txtadd(tour_deeplinkingvars, get(tour_deeplinkingvars), "&f=", get(viewfov));	</action>-->	<action name="animate">		if (tour_stopsequence == false,		  if (stopspotsequence == false,		    inc(hotspot[%1].frame,1,get(hotspot[%1].lastframe),0);		    mul(hotspot[%1].ypos,hotspot[%1].frame,hotspot[%1].frameheight);		    txtadd(hotspot[%1].crop,'0|',get(hotspot[%1].ypos),'|',get(hotspot[%1].framewidth),'|',get(hotspot[%1].frameheight));		    delayedcall(%2, animate(%1,%2) );		  );		);	</action>	<action name="startspotanimation">		set(tour_stopsequence, false);		set(stopspotsequence , false);		animate(get(name)    , %1);	</action>	<action name="stopspotanimation">		set(stopspotsequence, true);		setdefaultanimatedspotframe();	</action>	<action name="setdefaultanimatedspotframe">		txtadd(defaultcrop, "0|0|", get(framewidth), "|", get(frameheight));		set(crop, get(defaultcrop));	</action>	<action name="interruptanimation">		ifnot (tour_stopsequence === undefined,		  set(tour_stopsequence, true);		  wait(0.1);		);	</action>	<action name="showtooltip">		if (tooltip !== null,			getmessage(currentTooltipText, get(tooltip));			if (%2 == null,				set(tooltipCurrentTextfieldLayer, "panotourTooltipDefaultText");			,				if(%2 == "",					set(tooltipCurrentTextfieldLayer, "panotourTooltipDefaultText");				,					set(tooltipCurrentTextfieldLayer, %2);				);			);			ifnot (currentTooltipText == "",				tooltipTextSettingsUpdate(%1, %3, %4);				if(device.html5,					set(tooltipHtmlText, get(currentTooltipText));					escape(tooltipHtmlText);					set(layer[get(tooltipCurrentTextfieldLayer)].html, get(tooltipHtmlText));					set(layer[get(tooltipCurrentTextfieldLayer)].visible, true);					div(halfWidth, layer[get(tooltipCurrentTextfieldLayer)].width, 2);					if(%1 != "center",						sub(leftMargin, get(mouse.x), get(halfWidth));						add(rightMargin, get(mouse.x), get(halfWidth));					,						set(leftMargin, 0);						set(rightMargin, 0);					);					indexoftxt(alignedOnRight, %1, right, 0);					indexoftxt(alignedOnLeft, %1, left, 0);					if(%3 == "right",						if(alignedOnRight != -1,							set(rightMargin, 0);						);					);					if(%3 == "left",						if(alignedOnLeft != -1,							set(leftMargin, 0);						);					);					set(totalHeight, get(layer[get(tooltipCurrentTextfieldLayer)].height));					if(%1 != "center",						sub(topMargin, get(mouse.y), get(totalHeight));						if(%3 == "top",							add(bottomMargin, get(mouse.y), get(totalHeight));						,							set(bottomMargin, get(mouse.y));						);					,						set(topMargin, 0);						set(bottomMargin, 0);					);					indexoftxt(alignedOnBottom, %1, bottom, 0);					indexoftxt(alignedOnTop, %1, top, 0);					if(%3 == "top",						if(alignedOnTop != -1,							set(topMargin, 0);						);					);					if(%3 == "bottom",						if(alignedOnBottom != -1,							set(bottomMargin, 0);						);					);					if(leftMargin LT 0,						set(tooltipPositionX, get(halfWidth));						if(%1 == "hotspot",							if(topMargin LT 0,								set(layer[get(tooltipCurrentTextfieldLayer)].align, topleft);							,								if(bottomMargin GT stageheight,									set(layer[get(tooltipCurrentTextfieldLayer)].align, bottomleft);								,									set(layer[get(tooltipCurrentTextfieldLayer)].align, left);								);							);						);					,						if(rightMargin GT stagewidth,							sub(tooltipPositionX, get(stagewidth), get(halfWidth));							if(%1 == "hotspot",								if(topMargin LT 0,									set(layer[get(tooltipCurrentTextfieldLayer)].align, topright);								,									if(bottomMargin GT stageheight,										set(layer[get(tooltipCurrentTextfieldLayer)].align, bottomright);									,										set(layer[get(tooltipCurrentTextfieldLayer)].align, right);									);								);							);						,							if(alignedOnRight != -1,								sub(tooltipPositionX, stagewidth, get(mouse.x));							,								if(alignedOnLeft != -1,									set(tooltipPositionX, get(mouse.x));								,									div(tooltipPositionX, stagewidth, 2);									sub(tooltipPositionX, get(mouse.x), get(tooltipPositionX));								);							);						);					);					set(layer[get(tooltipCurrentTextfieldLayer)].x, get(tooltipPositionX));					if(topMargin LT 0,						set(tooltipPositionY, get(totalHeight));						if(%1 == "hotspot",							if(leftMargin LT 0,								set(layer[get(tooltipCurrentTextfieldLayer)].align, topleft);							,								if(rightMargin GT stagewidth,									set(layer[get(tooltipCurrentTextfieldLayer)].align, topright);								,									set(layer[get(tooltipCurrentTextfieldLayer)].align, top);								);							);						);					,						if(bottomMargin GT stageheight,							sub(tooltipPositionY, get(stageheight), get(totalHeight));							if(%1 == "hotspot",								if(leftMargin LT 0,									set(layer[get(tooltipCurrentTextfieldLayer)].align, bottomleft);								,									if(rightMargin GT stagewidth,										set(layer[get(tooltipCurrentTextfieldLayer)].align, bottomright);									,										set(layer[get(tooltipCurrentTextfieldLayer)].align, bottom);									);								);							);						,							if(alignedOnBottom != -1,								sub(tooltipPositionY, stageheight, get(mouse.y));							,								if(alignedOnTop != -1,									set(tooltipPositionY, get(mouse.y));								,									div(tooltipPositionY, stageheight, 2);									sub(tooltipPositionY, get(mouse.y), get(tooltipPositionY));								);							);						);					);					set(layer[get(tooltipCurrentTextfieldLayer)].y, get(tooltipPositionY));				,					indexoftxt(found, get(currentTooltipText), '[');					if(found GE 0,						subtxt(part1, get(currentTooltipText), 0, get(found));						add(found, 1);						subtxt(part2, get(currentTooltipText), get(found), get(currentTooltipText.length));						txtadd(currentTooltipText, get(part1), '[[', get(part2));					);					indexoftxt(found, get(currentTooltipText), ']');					if(found GE 0,						subtxt(part1, get(currentTooltipText), 0, get(found));						add(found, 1);						subtxt(part2, get(currentTooltipText), get(found), get(currentTooltipText.length));						txtadd(currentTooltipText, get(part1), ']]', get(part2));					);					escape(currentTooltipText);					ifnot (get(tooltipCurrentTextfieldLayer) == "",						showtext(get(currentTooltipText), get(tooltipCurrentTextfieldLayer));					,						showtext(get(currentTooltipText));					);				);			);		);	</action>	<action name="hidetooltip">		if(device.html5,				set(layer[get(tooltipCurrentTextfieldLayer)].visible, false);				set(layer[get(tooltipCurrentTextfieldLayer)].html, '');		,			showtext('');		);	</action>	<action name="tooltiptextsettingsupdate">		if(get(tooltipCurrentTextfieldLayer) != "",			if (%1 == "hotspot",				set(layer[get(tooltipCurrentTextfieldLayer)].align, center);			,				set(layer[get(tooltipCurrentTextfieldLayer)].align, %1);			);			if (%3 == null,				set(layer[get(tooltipCurrentTextfieldLayer)].width, 200);			,				set(layer[get(tooltipCurrentTextfieldLayer)].width, %3);			);			if (%2 == null,				set(layer[get(tooltipCurrentTextfieldLayer)].edge, "bottom");			,				set(layer[get(tooltipCurrentTextfieldLayer)].edge, %2);			);			set(layer[get(tooltipCurrentTextfieldLayer)].zorder, 99);			if (%2 == null,				set(textstyle[get(tooltipCurrentTextfieldLayer)].edge, "bottom");			,				set(textstyle[get(tooltipCurrentTextfieldLayer)].edge, %2);			);		);	</action>	<action name="onkdz">		if(keycode==17,set(tour_ctrlPressed,true );,if(keycode==107,set(fov_moveforce,-1);,if(keycode==109,set(fov_moveforce,+1);,if(tour_ctrlPressed==true,if(keycode==96,lookto(get(panoview.h),get(panoview.v),get(panoview.fov)););););););	</action>	<action name="onkuz">		if(keycode==17,set(tour_ctrlPressed,false);,if(keycode==107,set(fov_moveforce, 0);,if(keycode==109,set(fov_moveforce, 0););););	</action>	<action name="startup">		if (s !== null, if (startscene === null, set(startscene, get(s));); );		if (startscene === null,		  set(startscene, pano21);		);		mainloadscene(get(startscene));		if (h !== null,		  if (v !== null,		    if (f !== null,		      lookat(get(h), get(v), get(f));		     ,		      lookat(get(h), get(v));		    );		  );		);	</action>	<action name="setzorder2onstandardspots">		if (device.html5,		  ifnot (device.desktop,		  );		);	</action>	<data name="en_project_title">		New Project	</data>	<data name="en_pano21_title">		hairstyling4	</data>	<!-- set skin settings: bingmaps? gyro? -->	<skin_settings bingmaps="true"	               bingmaps_key="An4-9WoANqtASVorNezSjENest2VC0zoAzvMhEpdTjb3uY-k6u6bMkPxYpDsolsF"	               bingmaps_zoombuttons="false"	               gyro="true"	               thumbs_width="120" thumbs_height="80" thumbs_padding="10" thumbs_crop=""	               thumbs_opened="false"	               thumbs_text="true"	               thumbs_dragging="true"	               thumbs_onhoverscrolling="false"	               thumbs_scrollbuttons="true"	               thumbs_scrollindicator="false"	               tooltips_thumbs="false"	               tooltips_hotspots="false"	               tooltips_mapspots="false"	               controlbar_offset="20"	               />		<textstyle name="panotourtooltipdefaulttext" font="Arial" fontsize="14" background="false" border="false" textcolor="0xffffff" effect="dropshadow(0,45,0x000000,4,2);" textalign="left" yoffset="0" />	 <!-- define the menu items -->	<group name="level_0">	    <group name="object_1" value="Find all of the Fire Extinguishers" link="" />	    <group name="object_2" value="Locate French Braid" link="" />	    <group name="object_3" value="Click on Clock" link="" />	    <group name="object_4" value="Find Guy" link="" />	    <group name="object_5" value="Find the Barbacide quiz" link="" />	</group>    	<hotspot name="cabinet" url="infor.png" 	         ath="83.582938" atv="-0.919463" width="128" height="128" scale="0.224416"                 onclick="launchHotspotItem2(name);"		 visible="true"		 	         />	<hotspot name="hairblower" url="infor.png" 	         ath="25.289965" atv="9.209618" width="128" height="128" scale="0.258122"                 onclick="launchHotspotItem(name);"	         />		<hotspot name="clock" visible="true" onclick="hotspotClick(name);"	ath="-54.195532" atv="-10.540719" width="128" height="128" scale="0.524416" alpha="0.0" alturl="infor.png">		<point ath="-54.195532" atv="-10.540719" />		<point ath="-53.738179" atv="-10.436311" />		<point ath="-53.357757" atv="-10.043027" />		<point ath="-53.15444" atv="-9.389667" />		<point ath="-53.218232" atv="-8.549609" />		<point ath="-53.55896" atv="-7.796576" />		<point ath="-54.072497" atv="-7.39124" />		<point ath="-54.512676" atv="-7.407813" />		<point ath="-54.819151" atv="-7.712933" />		<point ath="-55.053208" atv="-8.193532" />		<point ath="-55.140571" atv="-8.890025" />		<point ath="-55.051501" atv="-9.58639" />		<point ath="-54.697599" atv="-10.237804" />	</hotspot>		<hotspot name="braid" visible="true" onclick="hotspotClick(name);"	ath="110.987133" atv="7.534046" width="128" height="128" scale="0.524416" alpha="0.0" alturl="infor.png">		<point ath="110.987133" atv="7.534046" />		<point ath="110.110395" atv="7.754318" />		<point ath="109.761867" atv="8.637931" />		<point ath="109.351394" atv="9.508399" />		<point ath="108.599887" atv="9.740167" />		<point ath="108.362586" atv="10.00099" />		<point ath="108.390074" atv="10.697505" />		<point ath="108.18316" atv="10.871989" />		<point ath="108.031421" atv="11.597313" />		<point ath="107.496033" atv="11.958689" />		<point ath="107.097283" atv="11.693809" />		<point ath="106.937333" atv="11.314949" />		<point ath="107.103037" atv="10.939231" />		<point ath="106.909836" atv="9.195932" />		<point ath="107.094692" atv="8.067584" />		<point ath="107.493786" atv="7.419673" />		<point ath="108.766771" atv="6.599373" />		<point ath="109.436123" atv="6.397763" />		<point ath="110.311228" atv="6.613406" />		<point ath="110.837026" atv="6.986056" />	</hotspot>		<hotspot name="fe_1" visible="true" onclick="hotspotClick(name);"	ath="169.376669" atv="5.281997" width="128" height="128" scale="0.524416" alpha="0.0" alturl="infor.png">		<point ath="169.376669" atv="5.281997" />		<point ath="169.904205" atv="5.443164" />		<point ath="171.152536" atv="5.315683" />		<point ath="171.390877" atv="4.971234" />		<point ath="171.237926" atv="2.487761" />		<point ath="171.554993" atv="2.515802" />		<point ath="171.426269" atv="0.961518" />		<point ath="171.82286" atv="0.277214" />		<point ath="171.535465" atv="-0.874156" />		<point ath="170.905431" atv="-1.110316" />		<point ath="170.46304" atv="-1.813843" />		<point ath="169.884941" atv="-1.760959" />		<point ath="169.778022" atv="-1.318013" />		<point ath="169.463177" atv="-1.238111" />		<point ath="169.435014" atv="-0.872855" />		<point ath="168.752368" atv="-0.61251" />		<point ath="168.588985" atv="0.330178" />		<point ath="168.058845" atv="4.823951" />		<point ath="169.112473" atv="4.990158" />	</hotspot>		<hotspot name="guy" visible="true" onclick="hotspotClick(name);"	ath="96.353743" atv="0.486812" width="128" height="128" scale="0.524416" alpha="0.0" alturl="infor.png">		<point ath="96.353743" atv="0.486812" />		<point ath="96.499131" atv="0.122907" />		<point ath="96.586346" atv="-0.153033" />		<point ath="96.65901" atv="-0.413648" />		<point ath="96.586441" atv="-0.965061" />		<point ath="96.39844" atv="-1.25579" />		<point ath="95.977429" atv="-1.328166" />		<point ath="95.642821" atv="-1.28455" />		<point ath="95.454017" atv="-1.096017" />		<point ath="95.395465" atv="-0.413523" />		<point ath="95.308293" atv="-0.326433" />		<point ath="95.351628" atv="-0.036846" />		<point ath="95.598269" atv="0.326936" />		<point ath="95.83134" atv="0.500557" />		<point ath="96.078346" atv="0.530374" />	</hotspot>				<hotspot name="solution" visible="true" onclick="hotspotClick(name);"	ath="39.948877" atv="5.078163" width="128" height="128" scale="0.524416" alpha="0.0" alturl="infor.png">		<point ath="39.948877" atv="5.078163" />		<point ath="40.15265" atv="5.078166" />		<point ath="40.181841" atv="5.309589" />		<point ath="40.590074" atv="5.59955" />		<point ath="40.551032" atv="8.458312" />		<point ath="40.639719" atv="8.777936" />		<point ath="40.315518" atv="8.908386" />		<point ath="39.903548" atv="8.894633" />		<point ath="39.491651" atv="8.864439" />		<point ath="39.301316" atv="8.791432" />		<point ath="39.31703" atv="8.311875" />		<point ath="39.409142" atv="5.743502" />		<point ath="39.497017" atv="5.497469" />		<point ath="39.905086" atv="5.368183" />		<point ath="39.948827" atv="5.237256" />	</hotspot>		<action name="hotspotClick">		trace(%1);		if(%1=='guy', set(plugin[menu_4].visible, false));		if(%1=='clock', set(plugin[menu_3].visible, false));		if(%1=='fe_1', set(plugin[menu_1].visible, false));		if(%1=='braid', set(plugin[menu_2].visible, false));		if(%1=='solution',			js ( launchQW()));	</action>                <action name="launchHotspotItem">		trace('TEST');                showtext(This is a hotspot);                js( launchColorbox(%1));	</action>		<action name="getData">		trace('Click on ',%1);	</action>		<action name="launchHotspotItem2">		trace('TEST');                showtext(This is a hotspot);                js( launchColorbox2(%1));	</action>                        <action name="movePano">              trace('parameter1=',%1);              trace(hlookat_moveforce);              if(%1=='leftbtn', set(hlookat_moveforce, -.1));              if(%1=='rightbtn', set(hlookat_moveforce, .1));                      </action>        <action name="stopPano">          set(hlookat_moveforce, 0);        </action>		<events name="evntOnStart" onpreviewcomplete="hideMenu()" keep="true"/>	<action name="hideMenu">		slide_menu_left();	</action>		<events name="evntChange" onviewchanged="showHotSpots()" keep="true"/>	<action name="showHotSpots">		set(i,0);		loop_hotspots(0);	</action>	<action name="loop_hotspots">		test_hotspot_in_range(get(hotspot[%1].name));		inc(i);		if (i LT hotspot.count, loop_hotspots( get(i) ) );	</action>	<action name="test_hotspot_in_range">		sub(hdistance, view.hlookat, hotspot[%1].ath);		mod(hdistance,hdistance,360);		if(hdistance GT 180, sub(hdistance,hdistance,360));		if(hdistance LT -180, add(hdistance,hdistance,360));		sub(vdistance, view.vlookat, hotspot[%1].atv);		mod(vdistance,vdistance,360);		if(vdistance GT 180, sub(vdistance,vdistance,360));		if(vdistance LT -180, add(vdistance,vdistance,360));		if(hdistance LT 0, mul(hdistance,hdistance,-1));		if(vdistance LT 0, mul(vdistance,vdistance,-1));		if(hdistance GT 40, set(hdistance,40) );		if(vdistance GT 40, set(vdistance,40) );		div(hdistance,hdistance,40);		div(vdistance,vdistance,40);		add(distance2,hdistance,vdistance);		sub(hotspot[%1].alpha,1.0,distance2);		if(hotspot[%1].alpha LT 0.0, set(hotspot[%1].alpha,0.0) );	</action>          <layer name="leftBtn"                 type="image"                 devices="all"                  visible="true"                  enabled="true"                  handcursor="true"                  maskchildren="false"                  scalechildren="false"                 url="1leftarrow.png"                  scale=".3"                alpha=".5"                align="left"                onhover="movePano(name);"		ondown="movePano(name);"                onout="stopPano"		onup="stopPano"/>          <layer name="rightBtn"                 type="image"                 devices="all"                  visible="true"                  enabled="true"                  handcursor="true"                  maskchildren="false"                  scalechildren="false"                 url="1leftarrow.png"                  scale=".3"                alpha=".5"                align="right"                rotate="180"                x="85"                onhover="movePano(name);"		ondown="movePano(name);"                onout="stopPano"		onup="stopPano"/>	  	  <!--<layer name="tasks"		type="container"		devices="all"		visible="true"		enabled="true"		handcursor="false"		maskchildren="false"		scalechildren="false"                align="righttop"                x="20"		y="20"		width="10%"		height="40%"		bgcolor="0x000000"		bgalpha="0.5"		bgcapture="true">				<layer name="tasks_title"		       type="container"		       devices="all"			visible="true"			enabled="true"			handcursor="false"			maskchildren="false"			scalechildren="false"			width="100%"			height="10%"			align="top"			parent="tasks"			bgcolor="0x000000"			bgalpha="0.8"			bgcapture="true">						<layer name="tasks_title_text"			       url="plugins/textfield.swf"			       html="[b]TASKS[/b]"				align="top"				parent="tasks_title"				css="font-family:Arial; font-size:16px; color:#FFFFFF;"				backgroundcolor="0x000000"				backgroundalpha="0.0"				autowidth="auto"				autoheight="auto"				selectable="false"				bgcapture="true"/>		</layer>		<layer name="tasks_table"		       type="container"		       devices="all"			visible="true"			enabled="true"			handcursor="false"			maskchildren="false"			scalechildren="false"			width="100%"			height="90%"			align="bottom"			parent="tasks"			bgcolor="0x000000"			bgalpha="0.0"			bgcapture="true">					<layer name="task_1"				url="plugins/textfield.swf"				html="Find all of the Fire Extinguishers"				width="100%"				autoheight="auto"				wordwrap="true"				css="font-family:Arial; font-size:10px; color:#FFFFFF;"				backgroundcolor="0x000000"				backgroundalpha="0.0"				selectable="false"				parent="tasks_table"				y="5"				align="topleft"				onclick="getData(name);"/>			<layer name="task_2"				url="plugins/textfield.swf"				html="Locate French Braid"				autowidth="auto"				autoheight="auto"				wordwrap="true"				css="font-family:Arial; font-size:10px; color:#FFFFFF;"				backgroundcolor="0x000000"				backgroundalpha="0.0"				selectable="false"				parent="tasks_table"				y="40"				align="topleft"				onclick="getData(name);"/>			<layer name="task_3"				url="plugins/textfield.swf"				html="Click on Clock"				autowidth="auto"				autoheight="auto"				wordwrap="true"				css="font-family:Arial; font-size:10px; color:#FFFFFF;"				backgroundcolor="0x000000"				backgroundalpha="0.0"				selectable="false"				parent="tasks_table"				y="75"				align="topleft"				onclick="getData(name);"/>			<layer name="task_4"				url="plugins/textfield.swf"				html="Find Guy"				autowidth="auto"				autoheight="auto"				wordwrap="true"				css="font-family:Arial; font-size:10px; color:#FFFFFF;"				backgroundcolor="0x000000"				backgroundalpha="0.0"				selectable="false"				parent="tasks_table"				y="110"				align="topleft"				onclick="getData(name);"/>			<layer name="task_5"				url="plugins/textfield.swf"				html="Find the Barbacide quiz"				autowidth="auto"				autoheight="auto"				wordwrap="true"				css="font-family:Arial; font-size:10px; color:#FFFFFF;"				backgroundcolor="0x000000"				backgroundalpha="0.0"				selectable="false"				parent="tasks_table"				y="145"				align="topleft"				onclick="getData(name);"/>		</layer>	  </layer>-->      	<scene name="pano21" onstart="" backgroundsoundloops="0" titleid="pano21_title" thumburl="panodata/%FIRSTXML%/hairstyling4_21/thumbnail.jpg" descriptionid="" backgroundsound="" multires="true" heading="0" full360="true" planar="false">		<autorotate speed="5" waittime="1" horizon="0.000000" tofov="90.000000" />		<panoview h="0.000000" vmin="-90" fov="90.000000" hmax="180" v="0.000000" fovmax="90" hmin="-180" vmax="90" />		<view vlookat="0.000000" hlookatmax="180" fovmax="90" vlookatmin="-90" hlookat="0.000000" fov="90.000000" vlookatmax="90" fisheye="0" limitview="range" maxpixelzoom="1.0" hlookatmin="-180" />		<preview type="CUBESTRIP" striporder="FRBLUD" url="panodata/%FIRSTXML%/hairstyling4_21/preview.jpg" />		<image baseindex="0" multires="true" tilesize="512" type="CUBE">			<level tiledimageheight="7949" tiledimagewidth="7949">				<front url="panodata/hairstyling4_21/0/3/%v_%u.jpg" />				<right url="panodata/hairstyling4_21/1/3/%v_%u.jpg" />				<back url="panodata/hairstyling4_21/2/3/%v_%u.jpg" />				<left url="panodata/hairstyling4_21/3/3/%v_%u.jpg" />				<up url="panodata/hairstyling4_21/4/3/%v_%u.jpg" />				<down url="panodata/hairstyling4_21/5/3/%v_%u.jpg" />			</level>			<level tiledimageheight="3974" tiledimagewidth="3974">				<front url="panodata/hairstyling4_21/0/2/%v_%u.jpg" />				<right url="panodata/hairstyling4_21/1/2/%v_%u.jpg" />				<back url="panodata/hairstyling4_21/2/2/%v_%u.jpg" />				<left url="panodata/hairstyling4_21/3/2/%v_%u.jpg" />				<up url="panodata/hairstyling4_21/4/2/%v_%u.jpg" />				<down url="panodata/hairstyling4_21/5/2/%v_%u.jpg" />			</level>			<level tiledimageheight="1987" tiledimagewidth="1987">				<front url="panodata/hairstyling4_21/0/1/%v_%u.jpg" />				<right url="panodata/hairstyling4_21/1/1/%v_%u.jpg" />				<back url="panodata/hairstyling4_21/2/1/%v_%u.jpg" />				<left url="panodata/hairstyling4_21/3/1/%v_%u.jpg" />				<up url="panodata/hairstyling4_21/4/1/%v_%u.jpg" />				<down url="panodata/hairstyling4_21/5/1/%v_%u.jpg" />			</level>			<level tiledimageheight="993" tiledimagewidth="993">				<front url="panodata/hairstyling4_21/0/0/%v_%u.jpg" />				<right url="panodata/hairstyling4_21/1/0/%v_%u.jpg" />				<back url="panodata/hairstyling4_21/2/0/%v_%u.jpg" />				<left url="panodata/hairstyling4_21/3/0/%v_%u.jpg" />				<up url="panodata/hairstyling4_21/4/0/%v_%u.jpg" />				<down url="panodata/hairstyling4_21/5/0/%v_%u.jpg" />			</level>		</image>		<action name="setzorder2onstandardspots">			if (device.html5,			ifnot (device.desktop,									);			);		</action>	</scene></krpano>